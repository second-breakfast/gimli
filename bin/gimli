#!/usr/bin/env python3

try:
    import sys
    import time
    import curses
    from gimli import Gimli
except:
    sys.exit("Problem loading gimli, try: 'pip3 install gimli'")

g = Gimli()
if len(sys.argv) > 1:
    cmd = sys.argv[1]
    if cmd == "cpu_util":
        print(g.cpu_util())
    elif cmd == "cpu_tot":
        print(g.cpu_tot())
    elif cmd == "memusage":
        print(g.memusage())
    elif cmd == "meminfo":
        print(g.meminfo())
    elif cmd == "serve":
        if len(sys.argv) == 3:
            try:
                workers = int(sys.argv[2])
            except:
                print("Abort. Invalid number of workers")
                sys.exit(1)
            if workers > 10 or workers < 0:
                print("Abort. Workers must be: 0 < workers < 10")
                sys.exit(1)
        else:
            # Default to 3 workers.
            workers = 3
        g.gimli_server("0.0.0.0", 8001, workers)
    elif cmd == "watch":
        try:
            def run_gimli(window):
                while True:
                    window.addstr(1, 0, "{}".format(time.strftime("%B %d, %Y    %H:%M:%S")))
                    window.addstr(3, 0, "Gimli is mining for system info...\n")
                    window.addstr(4, 0, g.memusage_str()+"\n"+g.cpu_util_str()+"\n")
                    window.refresh()
                    time.sleep(2)
            curses.wrapper(run_gimli)
        except KeyboardInterrupt:
            sys.exit(0)
    else:
        print("usage: gimli [-h | cpu_util | cpu_tot | meminfo | memusage | serve [N] | watch]")
else:
    print("usage: gimli [-h | cpu_util | cpu_tot | meminfo | memusage | serve [N] | watch]")
